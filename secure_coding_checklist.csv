Section,Checklist Item,Description
회원가입 및 프로필 관리,서버측 입력 검증,"사용자명(username)와 비밀번호(password)에 대해 길이, 허용 문자 집합, 형식 등 서버측 검증 수행. XSS 공격 방지를 위해 입력값 필터링 및 인코딩 적용 여부 확인"
,CSRF 보호,"회원가입, 로그인, 프로필 수정 등 모든 폼에 대해 CSRF 토큰 사용 여부를 확인하여 요청 위조 공격 방지"
,비밀번호 보안,"비밀번호를 평문으로 저장하지 않고 bcrypt, Argon2 등 강력한 해시 알고리즘과 고유 salt를 적용하여 암호화 저장하는지 확인"
,세션 쿠키 설정,"세션 쿠키에 HttpOnly 및 HTTPS 환경에서 Secure 플래그가 적용되어 있는지 확인"
,세션 만료 및 재인증,"일정 시간 이후 세션 만료 및 민감 작업 시 재인증 로직이 구현되어 있는지 확인"
,실패 로그인 방어,"로그인 실패 횟수에 따른 계정 잠금 혹은 지연(time-out) 메커니즘 적용 여부 확인"
,오류 메시지,"오류 발생 시 내부 정보(스택 트레이스, DB 정보 등)가 노출되지 않도록 처리되어 있는지 확인"
상품 등록 및 관리,폼 입력 검증,"상품 제목, 설명, 가격 등의 입력 필드에 대해 서버측 검증 및 필수 항목 체크 여부 확인. 가격은 숫자 형식 및 범위 검증 적용"
,XSS 방어,"사용자 입력(상품 설명 등)에 대해 HTML 태그 및 스크립트 코드 이스케이프 또는 필터링 적용 여부 확인"
,인증된 사용자만 등록,"상품 등록, 수정, 삭제 기능이 로그인한 사용자에게만 허용되도록 접근 제어가 구현되어 있는지 확인"
,소유자 확인,"상품 수정 및 삭제 시, 요청한 사용자가 해당 상품의 소유자인지 검증하는 로직이 구현되어 있는지 확인"
,데이터 무결성,"데이터베이스에 저장되기 전 모든 필수 항목 및 형식이 올바른지 검증하는 로직이 있는지 확인"
실시간 채팅 및 메시징,메시지 내용 검증,"채팅 메시지에 대해 길이 제한, 허용 문자 집합, XSS 이스케이프 처리 여부 등 서버측 검증 수행 여부 확인"
,사용자 인증,"Socket 연결 시 사용자가 인증된 상태인지 확인하는 로직(예: 로그인 상태 확인)이 적용되어 있는지 확인"
,메시지 검증,"클라이언트에서 수신한 메시지 데이터의 형식 및 내용에 대해 서버측 검증 로직이 존재하는지 확인"
,Rate Limiting,"동일 사용자가 단기간에 과도한 메시지를 보내지 않도록 제한하는 기능(스팸 방지)이 구현되어 있는지 확인"
,연결 암호화,"운영 환경에서 WSS(SSL/TLS 암호화된 웹소켓)를 사용하여 데이터 전송의 기밀성이 보장되는지 확인"
안전 거래 및 신고,폼 입력 검증,"신고 대상(target_id) 및 신고 사유(reason)에 대해 서버측 입력 검증, 길이 제한, XSS 방어 적용 여부 확인"
,인증된 사용자 접근,"신고 기능은 반드시 로그인한 사용자만 접근 가능하도록 제어되어 있는지 확인"
,데이터 무결성 및 로그 관리,"신고 접수 시 올바른 형식의 데이터가 저장되고, 신고 활동이 감사 로그로 기록되는지 확인"
,신고 남용 방지,"동일 사용자의 반복 신고 제한, 신고 건수 제한 및 관리자 검토 프로세스 등 신고 기능 남용 방지 로직이 구현되어 있는지 확인"
전체 시스템,ORM 및 파라미터 바인딩,"SQLAlchemy ORM 및 파라미터 바인딩을 통해 SQL 인젝션 공격에 대한 방어가 제대로 이루어지고 있는지 확인"
,데이터베이스 권한,"데이터베이스 사용자 권한이 최소 권한 원칙에 따라 설정되어 민감 데이터 접근이 제한되어 있는지 확인"
,보안 헤더 설정,"Content-Security-Policy, X-Frame-Options, X-Content-Type-Options 등의 보안 헤더가 적용되어 있는지 확인"
,HTTPS 적용,"운영 환경에서 HTTPS를 사용하여 데이터 전송 시 기밀성 및 무결성이 보장되는지 확인"
,에러 및 예외 처리,"예외 처리 시 민감 정보가 사용자에게 노출되지 않고, 에러 로그에 민감 정보 기록 방지 로직이 구현되어 있는지 확인"
,라이브러리 및 의존성 관리,"사용 중인 Flask, SQLAlchemy, Flask-SocketIO 등 라이브러리의 최신 보안 패치 및 업데이트가 적용되어 있는지 정기적으로 점검"
"개발:회원 관리","회원가입 페이지 구현","사용자가 아이디, 비밀번호 등을 입력하여 가입할 수 있는 페이지"
"개발:회원 관리","로그인 페이지 구현","사용자가 아이디, 비밀번호로 로그인할 수 있는 페이지"
"개발:회원 관리","로그아웃 기능 구현","사용자가 안전하게 로그아웃할 수 있는 기능"
"개발:회원 관리","아이디 중복 확인 기능","회원가입 시 아이디 중복 여부 실시간 확인"
"개발:회원 관리","마이페이지 구현","로그인한 사용자의 프로필 정보 조회 및 수정 페이지"
"개발:회원 관리","마이페이지 - 비밀번호 변경 기능","사용자가 마이페이지에서 비밀번호를 변경하는 기능"
"개발:회원 관리","보안: 비밀번호 해싱 적용","bcrypt 등 안전한 해시 알고리즘으로 비밀번호 저장"
"개발:회원 관리","보안: 안전한 세션 관리","Flask-Login 등 라이브러리 활용, Secure/HttpOnly 플래그 설정"
"개발:회원 관리","보안: CSRF 방지 토큰 적용","회원가입/로그인/수정 폼에 CSRF 토큰 적용"
"개발:회원 관리","User 모델 정의 및 연동","사용자 정보 관리를 위한 DB 모델 및 테이블 생성/연동"
"개발:상품 관리","상품 등록 페이지 구현","상품명, 가격, 설명, 사진 등을 입력하여 상품 등록하는 페이지"
"개발:상품 관리","상품 목록 조회 페이지 구현","등록된 상품 목록을 페이징하여 보여주는 페이지"
"개발:상품 관리","상품 상세 조회 페이지 구현","개별 상품의 상세 정보를 보여주는 페이지"
"개발:상품 관리","내 상품 관리 페이지 구현","로그인 사용자가 자신의 등록 상품을 관리하는 페이지"
"개발:상품 관리","상품 수정 기능 구현","등록된 상품의 정보를 수정하는 기능"
"개발:상품 관리","상품 삭제 기능 구현","등록된 상품을 삭제하는 기능"
"개발:상품 관리","권한: 상품 소유자 확인","상품 수정/삭제 시 요청자가 소유자인지 확인"
"개발:상품 관리","보안: 입력값 검증","상품 등록/수정 시 서버 측 입력값 검증 (길이, 형식, XSS 방지)"
"개발:상품 관리","보안: 출력 인코딩","상품 정보 출력 시 XSS 방지를 위한 인코딩 적용"
"개발:상품 관리","Product 모델 정의 및 연동","상품 정보 관리를 위한 DB 모델 및 테이블 생성/연동"
"개발:사용자 소통","1:1 채팅 UI 구현","사용자 간 메시지를 주고받는 기본 화면 구현"
"개발:사용자 소통","메시지 전송/수신 로직 구현","채팅 메시지를 DB에 저장하고 불러오는 로직"
"개발:사용자 소통","채팅 내역 조회 기능","특정 사용자 간의 대화 기록을 보여주는 기능"
"개발:사용자 소통","ChatRoom, Message 모델 정의","채팅 관련 DB 모델 및 테이블 생성/연동"
"개발:사용자 소통","(Optional) 실시간 업데이트","WebSocket 등을 이용한 실시간 메시지 수신 구현"
"개발:신고 및 차단","상품 신고 기능 구현","부적절한 상품을 신고하는 버튼/링크"
"개발:신고 및 차단","사용자 신고 기능 구현","부적절한 사용자를 신고하는 버튼/링크"
"개발:신고 및 차단","신고 사유 입력 기능","신고 시 구체적인 사유를 작성하는 기능"
"개발:신고 및 차단","신고 내역 DB 저장","신고 정보를 DB에 기록하는 기능"
"개발:신고 및 차단","Report 모델 정의 및 연동","신고 정보 관리를 위한 DB 모델 및 테이블 생성/연동"
"개발:신고 및 차단","관리자 연동: 신고 내역 조회","관리자가 신고 내역을 확인하는 기능"
"개발:송금","User 모델: 잔액 필드 추가","사용자별 가상 잔액 관리 필드 추가"
"개발:송금","송금 UI 구현","수신자, 금액을 입력하여 송금 요청하는 화면"
"개발:송금","송금 처리 로직 구현","잔액 확인 및 DB 업데이트 로직 (백엔드)"
"개발:송금","보안: DB 트랜잭션 적용","송금 시 데이터 정합성을 위한 트랜잭션 처리"
"개발:송금","송금 내역 DB 저장","Transaction 테이블에 송금 기록 저장"
"개발:송금","내 송금 내역 조회 페이지","사용자가 자신의 거래 내역을 확인하는 페이지"
"개발:송금","Transaction 모델 정의 및 연동","송금 내역 관리를 위한 DB 모델 및 테이블 생성/연동"
"개발:상품 검색","검색 바 UI 구현","키워드 입력을 위한 검색 창 구현"
"개발:상품 검색","키워드 검색 로직 구현","입력된 키워드로 상품을 찾는 백엔드 로직"
"개발:상품 검색","검색 결과 페이지 구현","검색된 상품 목록을 페이징하여 보여주는 페이지"
"개발:상품 검색","보안: SQL Injection 방지","검색어 처리 시 SQL Injection 방어"
"개발:관리자 기능","User 모델: 역할 필드 추가","관리자/일반 사용자 구분을 위한 role 필드"
"개발:관리자 기능","관리자 페이지 접근 제어","관리자만 접근 가능한 페이지/API 제한"
"개발:관리자 기능","사용자 관리: 목록 조회","전체 사용자 목록 조회 기능 (관리자)"
"개발:관리자 기능","사용자 관리: 상태/역할 변경","사용자 계정 상태(활성/정지) 및 역할 변경 기능"
"개발:관리자 기능","상품 관리: 목록 조회","전체 상품 목록 조회 기능 (관리자)"
"개발:관리자 기능","상품 관리: 상품 삭제/숨김","관리자에 의한 부적절 상품 관리 기능"
"개발:관리자 기능","신고 관리: 목록 조회 및 처리","신고 내역 확인 및 상태 변경, 조치 연동"
"개발:관리자 기능","데이터 조회: 송금 내역 조회","전체 송금 내역 확인 기능 (관리자)"
"개발:비기능적 요구사항","보안: OWASP Top 10 점검","주요 웹 취약점 점검 및 조치"
"개발:비기능적 요구사항","보안: HTTPS 적용","운영 환경 HTTPS 설정"
"개발:비기능적 요구사항","보안: 의존성 검사","사용 라이브러리 보안 취약점 점검"
"개발:비기능적 요구사항","보안: 시큐어 코딩 준수","보안 코딩 가이드라인 준수 여부 검토"
"개발:비기능적 요구사항","성능: 응답 시간 측정","주요 기능 응답 시간 목표치 만족 여부 확인"
"개발:비기능적 요구사항","사용성: UI/UX 검토","사용자 인터페이스 편의성 및 직관성 검토"
"개발:비기능적 요구사항","유지보수성: 코드 품질","코드 가독성, 모듈화, 주석 등 검토"
"개발:테스팅","단위 테스트 작성 및 실행","주요 모듈/함수 단위 테스트 커버리지 확보"
"개발:테스팅","통합 테스트 실행","모듈 간 연동 및 DB 연동 테스트"
"개발:테스팅","E2E 테스트 실행","사용자 시나리오 기반 종단 테스트"
"개발:테스팅","보안 테스트 수행","SAST, DAST 도구 활용 및 수동 점검"
"개발:문서화 및 배포","README.md 업데이트","프로젝트 설명, 설정, 실행 방법 명시"
"개발:문서화 및 배포","요구사항/설계 문서 검토","최종 산출물 검토 및 버전 관리"
"개발:문서화 및 배포","코드 주석 추가","필요한 부분에 코드 설명 주석 작성"
"개발:문서화 및 배포","GitHub 저장소 관리","Public 저장소에 최종 코드 및 문서 업로드"
